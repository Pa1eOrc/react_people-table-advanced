{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","utils/searchHelper.ts","components/PeopleTable.tsx","components/PeopleFilters.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","HomePage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","renderPersonName","person","name","slug","sex","PersonLink","people","useParams","selectedPerson","find","p","personMother","mother","motherName","personFather","father","fatherName","born","died","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","interactiveElements","PeopleTable","useSearchParams","searchParams","sort","get","order","createSortLinkParams","element","newSort","toLowerCase","newOrder","search","map","iconClasses","PeopleFilters","availableCenturies","setSearchParams","query","centuries","getAll","type","placeholder","onChange","event","setSearchWidth","target","century","includes","filter","ch","length","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","sortedPeople","setSortedPeople","useEffect","getPeople","data","catch","error","console","finally","updatedPeople","personA","personB","localeCompare","some","field","Math","ceil","sortPeople","year","index","arr","indexOf","a","b","NotFoundPage","Root","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0f14099e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\n\nimport { Link, useParams } from 'react-router-dom';\nimport React from 'react';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nconst renderPersonName = (person: Person | undefined, name?: string | null) => {\n  let context;\n\n  if (person) {\n    context = (\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      >\n        {person.name}\n      </Link>\n    );\n  } else if (!person && name) {\n    context = name;\n  } else {\n    context = '-';\n  }\n\n  return context;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  people,\n}) => {\n  const { slug } = useParams();\n  const selectedPerson = people.find(p => p.slug === slug);\n\n  const personMother = people.find(\n    mother => mother.name === person.motherName,\n  );\n\n  const personFather = people.find(\n    father => father.name === person.fatherName,\n  );\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': selectedPerson?.slug === person.slug },\n      )}\n    >\n      <td>{renderPersonName(person)}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{renderPersonName(personMother, person.motherName)}</td>\n      <td>{renderPersonName(personFather, person.fatherName)}</td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[],\n};\n\nconst interactiveElements = ['Name', 'Sex', 'Born', 'Died'];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const createSortLinkParams = (element: string) => {\n    let newSort = element.toLowerCase() || null;\n    let newOrder: string | null = null;\n\n    if (sort === newSort) {\n      newOrder = 'desc';\n      if (order === 'desc') {\n        newSort = null;\n        newOrder = null;\n      }\n    }\n\n    return {\n      search: getSearchWith(searchParams, {\n        sort: newSort,\n        order: newOrder,\n      }),\n    };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {interactiveElements.map(element => {\n            const iconClasses = classNames('fas', {\n              'fa-sort-up': element.toLowerCase() === sort && !order,\n              'fa-sort-down': element.toLowerCase() === sort && order,\n              'fa-sort': element.toLowerCase() !== sort,\n            });\n\n            return (\n              <th key={element}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {element}\n                  <Link to={createSortLinkParams(element)}>\n                    <span className=\"icon\">\n                      <i className={iconClasses} />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n            );\n          })}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <PersonLink\n              key={person.name}\n              person={person}\n              people={people}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  availableCenturies: number[]\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  availableCenturies,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function setSearchWidth(paramsToUpdate: SearchParams) {\n    const search = getSearchWith(searchParams, paramsToUpdate);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const updatedParams = { query: event.target.value || null };\n\n    setSearchWidth(updatedParams);\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filter</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={classNames({ 'is-active': sex === '' })}\n          to={{\n            search: getSearchWith(searchParams, { sex: null }),\n          }}\n        >\n          All\n        </Link>\n        <Link\n          className={classNames({ 'is-active': sex === 'm' })}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'm' }),\n          }}\n        >\n          Male\n        </Link>\n        <Link\n          className={classNames({ 'is-active': sex === 'f' })}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'f' }),\n          }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n            value={query}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {availableCenturies.map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={classNames(\n                  'button mr-1',\n                  { 'is-info': centuries.includes(century.toString()) },\n                )}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: centuries.includes(century.toString())\n                      ? centuries.filter(ch => ch !== century.toString())\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button',\n                'is-success',\n                { 'is-outlined': centuries.length > 0 },\n              )}\n              to={{\n                search: getSearchWith(searchParams, { centuries: null }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith(searchParams, {\n              centuries: null, query: null, sex: null,\n            }),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\nimport { PeopleFilters } from './PeopleFilters';\n\nfunction sortPeople(\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: string[],\n  sort: string,\n  order: string,\n) {\n  let updatedPeople = [...people];\n\n  switch (sort) {\n    case 'name':\n      updatedPeople = updatedPeople.sort((personA, personB) => {\n        return order === 'desc'\n          ? personB.name.localeCompare(personA.name)\n          : personA.name.localeCompare(personB.name);\n      });\n      break;\n\n    case 'sex':\n      updatedPeople = updatedPeople.sort((personA, personB) => {\n        return order === 'desc'\n          ? personB.sex.localeCompare(personA.sex)\n          : personA.sex.localeCompare(personB.sex);\n      });\n      break;\n\n    case 'born':\n      updatedPeople = updatedPeople.sort((personA, personB) => {\n        return order === 'desc'\n          ? personB.born - personA.born\n          : personA.born - personB.born;\n      });\n      break;\n\n    case 'died':\n      updatedPeople = updatedPeople.sort((personA, personB) => {\n        return order === 'desc'\n          ? personB.died - personA.died\n          : personA.died - personB.died;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  switch (sex) {\n    case 'm':\n      updatedPeople = updatedPeople.filter((person) => person.sex === 'm');\n      break;\n    case 'f':\n      updatedPeople = updatedPeople.filter((person) => person.sex === 'f');\n      break;\n    default:\n      break;\n  }\n\n  if (query) {\n    updatedPeople = updatedPeople.filter(({ name, fatherName, motherName }) => [\n      name, fatherName, motherName].some(field => field\n        && field.toLowerCase().includes(query.toLowerCase())));\n  }\n\n  if (centuries.length > 0) {\n    updatedPeople = updatedPeople.filter(\n      person => centuries.includes(Math.ceil(person.born / 100).toString()),\n    );\n  }\n\n  return updatedPeople;\n}\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [sortedPeople, setSortedPeople] = useState<Person[]>(people);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople().then((data) => {\n      setPeople(data);\n    }).catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Something went wrong', error);\n      setIsError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    setSortedPeople(\n      sortPeople(people, query, sex, centuries, sort, order),\n    );\n  }, [people, searchParams]);\n\n  const availableCenturies = people\n    .map(person => Math.ceil(person.born / 100))\n    .filter((year, index, arr) => arr.indexOf(year) === index)\n    .sort((a, b) => a - b);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Loader />\n      );\n    }\n\n    if (!isLoading && isError) {\n      return (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n    }\n\n    if (!isLoading && people.length === 0) {\n      return (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      );\n    }\n\n    return (\n      <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n        <div className=\"column is-7-tablet is-narrow-desktop\">\n          <PeopleFilters\n            availableCenturies={availableCenturies}\n          />\n        </div>\n\n        <div className=\"column\">\n          <div className=\"box table-container\">\n            {sortedPeople.length > 0 ? (\n              <PeopleTable\n                people={sortedPeople}\n              />\n            ) : (\n              <p>There are no people matching the current search criteria</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        {renderContent()}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}